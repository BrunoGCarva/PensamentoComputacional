{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FymK6PI1k6-k"
      },
      "source": [
        "#exercicio 1"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "SvsAgiu6h4Rd"
      },
      "outputs": [],
      "source": [
        "for x in range(1,11):\n",
        "  r = x * 9\n",
        "  print (\"9 X \",x,\" = \",r)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "803_VoFukiIS"
      },
      "source": [
        "#exercicio 2\n",
        "Faça um programa em Python que mostre todos os números inteiros ímpares situados na faixa\n",
        "de 1000 a 1500."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "jMCtU8jZkm6V"
      },
      "outputs": [],
      "source": [
        "for x in range(1000,1501):\n",
        " if x % 2 != 0:\n",
        "  print(x)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Jpkk9xbgliZL"
      },
      "source": [
        "#exercicio 3\n",
        "Elabore um programa em Python que calcule e escreva a soma de 10 números lidos."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Wc_I86sGlnRr"
      },
      "outputs": [],
      "source": [
        "s = 0\n",
        "for x in range(1,11):\n",
        "  n1 = float(input(f\"Digite o {x}° número\\n\"))\n",
        "  s = s + n1\n",
        "print(s)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "IxfmQPSsnIN7"
      },
      "source": [
        "#exercicio 4\n",
        "Faça um programa em Python que leia a nota de 10 alunos de uma turma. Ao final, deve ser\n",
        "escrita a média geral da turma."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "vQU_I1aCnPKj"
      },
      "outputs": [],
      "source": [
        "s = 0\n",
        "for x in range(1,11):\n",
        "  n1 = float(input(f\"Digite a nota do {x}° aluno\\n\"))\n",
        "  s = s + n1\n",
        "s = s/10\n",
        "print(\"A média geral da turma é\",s)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "EULSATwNnvFm"
      },
      "source": [
        "#exercicio 5\n",
        "Faça um programa em Python que leia 5 números. Para cada número fornecido, escreva se\n",
        "ele é NULO, NEGATIVO ou POSITIVO."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "GRo60SWSnuwe"
      },
      "outputs": [],
      "source": [
        "for x in range(1,6):\n",
        "  n1  = float(input(f\"Digite o {x}° número\\n\"))\n",
        "  if n1 == 0:\n",
        "    print(\"NULO\")\n",
        "  elif n1 < 0:\n",
        "    print(\"NEGATIVO\")\n",
        "  elif n1 > 0:\n",
        "    print(\"POSITIVO\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "NPPSiigZoQfo"
      },
      "source": [
        "#exercicio 6\n",
        "Ler dois valores inteiros e escrever os números em sequência do menor até maior valor."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Vja9aNbRoa13"
      },
      "outputs": [],
      "source": [
        "n1 = int(input(\"Digite o primeiro número\\n\"))\n",
        "n2 = int(input(\"Digite o segundo número\\n\"))\n",
        "if n1 < n2:\n",
        "  print(n1,n2)\n",
        "elif n1 > n2:\n",
        "  print(n2,n1)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "zgQs7sQOos0e"
      },
      "source": [
        "#exercicio 7\n",
        "Faça um programa em Python que escreva os números pares entre 100 e 200."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "tCmcIkavox08"
      },
      "outputs": [],
      "source": [
        "for x in range(100,201):\n",
        " if x % 2 == 0:\n",
        "  print(x)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "-N7Ucds1o6-t"
      },
      "source": [
        "#exercicio 8\n",
        "Escrever um programa em Python que leia um valor para n, inteiro e positivo, e escreva a\n",
        "tabuada de n. Com os respectivos valores."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "4eCUn8mopFVE"
      },
      "outputs": [],
      "source": [
        "n = int(input(\"Informe o número que deseja saber a tabuada \\n\"))\n",
        "print(\"Tabuada do\",n)\n",
        "for x in range (1,11):\n",
        "  s = n * x\n",
        "  print (n, \"X\",x,\"=\",s)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "FbYTCTDtpzK8"
      },
      "source": [
        "#exercicio 9\n",
        "Escrever um programa em Python que gera os números de 1000 a 1999 e escreve aqueles\n",
        "que divididos por 11 dão um resto igual a 5."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "YOagrLCjpy_e"
      },
      "outputs": [],
      "source": [
        "for x in range(1000,2000):\n",
        " if x % 11 == 5:\n",
        "  print(x)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jGoJoMKKqG70"
      },
      "source": [
        "#exercicio 10\n",
        "Faça um programa em Python que leia um número qualquer (N), e realize a soma dos\n",
        "números de 1 até N. Ao final, deve-se escrever o resultado."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "BJNZ6B4zqMfc"
      },
      "outputs": [],
      "source": [
        "N = float(input(\"Digite um número\\n\"))\n",
        "s = 0\n",
        "for x in range(1,int(N)+1):\n",
        "  s = s + x\n",
        "print(s)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "RPBbjGncsJlI"
      },
      "source": [
        "#exercicio 11\n",
        "Faça um programa em Python para ler 10 valores inteiros. Para cada valor fornecido escreva\n",
        "uma mensagem que indica se cada valor fornecido é PAR ou ÍMPAR."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "FX33PaxBqbGe"
      },
      "outputs": [],
      "source": [
        "s = 0\n",
        "for x in range(1,11):\n",
        "  n1 = float(input(f\"Digite o {x}° número\\n\"))\n",
        "  if n1 % 2 == 0:\n",
        "    print(\"PAR\")\n",
        "  elif n1 % 2 != 0:\n",
        "    print(\"IMPAR\")\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "5X6ZesqOs39N"
      },
      "source": [
        "#exercicio 12\n",
        "Faça um programa em Python que leia a idade de 10 alunos, calcule e escreva a média de\n",
        "idade destes."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "375lMsuWs325"
      },
      "outputs": [],
      "source": [
        "s = 0\n",
        "for x in range(1,11):\n",
        "  n1 = float(input(f\"Digite a idade do {x}° aluno\\n\"))\n",
        "  s = s + n1\n",
        "s = s/10\n",
        "print(\"A média geral da turma é\",s)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "chsFwr-htOaG"
      },
      "source": [
        "#exercicio 13\n",
        "Faça um algoritmo em Python que leia dois valores inteiros e escreva se eles estão em ordem\n",
        "crescente, decrescente ou são iguais, após isso escreva todos os valores do menor ao maior."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "b2zYUFQetOif"
      },
      "outputs": [],
      "source": [
        "n1 = int(input(\"Digite o primeiro número\\n\"))\n",
        "n2 = int(input(\"Digite o segundo número\\n\"))\n",
        "if n1 == n2:\n",
        "  print(\"Os números são iguais\")\n",
        "elif n1 > n2:\n",
        "  print(\"Os números estão em ordem decrescente\")\n",
        "elif n1 < n2:\n",
        "  print(\"Os números estão em ordem crescente\")\n",
        "if n1 < n2:\n",
        "  print(n1,n2)\n",
        "elif n1 > n2:\n",
        "  print(n2,n1)"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "B-RhYiDat1gc"
      },
      "source": [
        "#exercicio 14\n",
        "Escrever um programa em Python que lê 10 valores para n, um de cada vez, todos inteiros e\n",
        "positivos, e para cada n lido, escreva a tabuada de 1 até n de n.\n",
        "\n",
        "1 x n = n\n",
        "2 x n = 2n\n",
        "...\n",
        "n x n = n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aI6eYkKnuBxM"
      },
      "outputs": [],
      "source": [
        "for x in range(1,11):\n",
        "  n = int(input(f\"Informe a tabuada do {x}° número \\n\"))\n",
        "  print(\"------\\\\------\\\\------\")\n",
        "  print(\"Tabuada do\",n)\n",
        "  for x in range (1,n+1):\n",
        "    s = n * x\n",
        "    print (n, \"X\",x,\"=\",s)\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "wdAFZvop352k"
      },
      "source": [
        "1) Escreva um programa que lê um número inteiro N do usuário. O programa deverá escrever na tela o fatorial desse número (N!).\n",
        "\n",
        "Exemplo de entrada:\n",
        "\n",
        "5\n",
        "\n",
        "Saída:\n",
        "\n",
        "120\n",
        "\n",
        "Exemplo de entrada:\n",
        "\n",
        "8\n",
        "\n",
        "Saída:\n",
        "\n",
        "40320"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "bORqmflk4A5U"
      },
      "outputs": [],
      "source": [
        "n = int(input(\"Digite um número \\n\"))\n",
        "f = 1\n",
        "for x in range(1,n+1):\n",
        "  f *= x\n",
        "print(f)\n",
        "\n"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "6qySZnDg5pKM"
      },
      "source": [
        "2) Escreva um programa para uma urna eletrônica. O programa fica lendo os votos até que o usuário informe o valor 4444444 (código de finalização da urna). Após a finalização da urna, o programa deverá escrever na tela a quantidade de votos e o percentual de votos para cada uma das opções abaixo:\n",
        "\n",
        "a. Votos no Candidato 77\n",
        "\n",
        "b. Votos no Candidato 39\n",
        "\n",
        "c. Votos no Candidato 66\n",
        "\n",
        "d. Voto em branco (0)\n",
        "\n",
        "e. Votos nulos (nenhuma das opções anteriores)\n",
        "\n",
        "f. Votos válidos (aqueles computados para algum candidato)\n",
        "\n",
        "g. Votos não válidos"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "background_save": true
        },
        "id": "VM8AMUJm5z65"
      },
      "outputs": [],
      "source": [
        "!pip install pygame\n",
        "!pip install pygobject\n",
        "import pygame\n",
        "from IPython.display import Audio\n",
        "n = 0\n",
        "cont77 = 0\n",
        "cont39 = 0\n",
        "cont66 = 0\n",
        "contbranco = 0\n",
        "contnulo = 0\n",
        "pygame.init()\n",
        "while n != 4444444:\n",
        "  print(\"----------Candidatos----------\")\n",
        "  print(\" 1 - Candidato 77\")\n",
        "  print(\" 2 - Candidato 39\")\n",
        "  print(\" 3 - Candidato 66\")\n",
        "  print(\" 0 - Voto em branco\")\n",
        "  print(\" 4444444 - Finalizar urna\")\n",
        "  n = int(input(\"Digite o número do candidato \\n\"))\n",
        "  audio = Audio(\"/urnada.mp3\", autoplay=True)\n",
        "  display(audio)\n",
        "  pygame.quit()\n",
        "  if n == 1:\n",
        "    cont77 += 1\n",
        "  elif n == 2:\n",
        "    cont39 += 1\n",
        "  elif n == 3:\n",
        "    cont66 += 1\n",
        "  elif n == 0:\n",
        "    contbranco += 1\n",
        "  elif n != 4444444:\n",
        "    contnulo += 1\n",
        "total = cont77 + cont39 + cont66 + contbranco + contnulo\n",
        "print(\"----------------------------------------------\")\n",
        "print(\"Candidato 77:\",cont77,\"porcentagem\",round((cont77/total)*100,2),\"%\")\n",
        "print(\"Candidato 39:\",cont39,\"porcentagem\",round((cont39/total)*100,2),\"%\")\n",
        "print(\"Candidato 66:\",cont66,\"porcentagem\",round((cont66/total)*100,2),\"%\")\n",
        "print(\"Votos em branco:\",contbranco,\"porcentagem\",round((contbranco/total)*100,2),\"%\")\n",
        "print(\"Votos nulos:\",contnulo,\"porcentagem\",round((contnulo/total)*100 ,2),\"%\")\n",
        "print(\"Votos válidos:\",cont77+cont39+cont66)\n",
        "print(\"Votos não válidos:\",contbranco+contnulo)\n",
        "\n"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOYT63Wqs3MgQx/bD5QWEu9"
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
